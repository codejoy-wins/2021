// functions are generated by chatGPT in the pokeproject
function getPokemon() {
    let pokemonName = document.getElementById('pokemonInput').value;
    fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonName.toLowerCase()}`)
        .then(response => response.json())
        .then(data => {
            console.log(`data is ${data}`);
            document.getElementById('pokemonInfo').innerHTML = 
                `<h2>${data.name} has been added to your team</h2>
                 <img class="big" src="${data.sprites.front_default}" alt="${data.name}">`;
                 console.log("trying to add pokemon to team");
            addPokemonToTeam(data);
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('pokemonInfo').innerHTML = 
                `<p>Pokémon not found. Please try again.</p>`;
        });
}
// Function to add a pokemon to the team
function addPokemonToTeam(pokemonData) {
    console.log("adding pokemon to team");
    // Get the current team from local storage or create a new one if it doesn't exist
    let team = JSON.parse(localStorage.getItem('pokemonTeam')) || [];

    // Add the new pokemon to the start of the team array
    team.unshift(pokemonData);

    // If the team has more than 6 pokemon, remove the last one
    if (team.length > 6) {
        team.pop();
    }

    // Save the updated team back to local storage
    localStorage.setItem('pokemonTeam', JSON.stringify(team));

    // Update the display
    console.log("trying to update the display");
    displayPokemonTeam(team);
}

// Function to display the team
function displayPokemonTeam(team) {
    console.log("displaying pokemon team");
    // Use the team array to display the pokemon
    // This is where you would update the HTML to show the pokemon images and names
    document.getElementById("teamDisplay").innerHTML=``;
    for(let i=0; i < team.length; i++){
        console.log(team[i].name);
        console.log(team[i].types[0].type.name);
        let poketype = team[i].types[0].type.name;
        let alttype = "";
        if(team[i].types.length==2){
            alttype = team[i].types[1].type.name;
        }

        document.getElementById("teamDisplay").innerHTML+=`
        <div class="pok">
        ${team[i].name.toUpperCase()}
        <img class="poke" src="${team[i].sprites.front_default}" alt="${team[i].name}">
        ${poketype}
        ${alttype}
        </div>
        `
    }
}
// More chatgpt functions

// This function returns the current team data from local storage
function getTeamData() {
    console.log("getting team data");
    // Retrieve the team data stored as a JSON string in local storage
    const teamJSON = localStorage.getItem('pokemonTeam');
    
    // Parse the JSON string back into an array of Pokémon objects
    const team = teamJSON ? JSON.parse(teamJSON) : [];
    
    return team; // This returns the array of Pokémon objects
}


// This function should be called when you want to generate the summary
function generateSummary() {
    console.log("generating summary");
    const team = getTeamData();
    console.log(`sending team data`, team);
    console.log(`team[0].name = ${team[0].name}`);
    fetch('/.netlify/functions/pokemon-summary', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ team })
    })
    .then(response => response.json())
    .then(data => {
        document.getElementById('summary').innerHTML = data.summary;
    })
    .catch(error => console.error('Error:', error));
}